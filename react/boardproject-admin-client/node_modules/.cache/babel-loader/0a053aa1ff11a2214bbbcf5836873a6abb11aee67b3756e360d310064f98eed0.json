{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\08_Spring_react\\\\react\\\\boardproject-admin-client\\\\src\\\\components\\\\Restore.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { axiosApi } from \"../api/axiosAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Restore() {\n  _s();\n  const [withdrawnMembers, setWithdrawnMembers] = useState([]); // 탈퇴 회원 목록.\n  const [deleteBoards, setDeleteBoards] = useState([]); // 삭제 게시글 목록.\n  const [loading, setLoading] = useState(true); // 로딩 상태. (사용자 경험 상향 하기 위해 사용.)\n\n  // 탈퇴한 회원 목록 조회용 비동기 요청 함수.\n  const getWithdrawnMemberList = async () => {\n    try {\n      const resp = await axiosApi.get(\"/admin/withdrawnMemberList\");\n      if (resp.status === 200) {\n        setWithdrawnMembers(resp.data);\n      }\n    } catch (error) {\n      console.log(\"탈퇴 회원 목록 조회 중 에러 발생 : \", error);\n    }\n  };\n\n  // 탈퇴한 회원 복구 비동기 요청 함수.\n  const restoreMember = async member => {\n    if (!window.confirm(member.memberNickname + \"님을 탈퇴 복구 하겠습니까?\")) {\n      try {\n        const resp = await axiosApi.put(\"/admin/restoreMember\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  // ----------------------------------------\n\n  // 삭제한 게시글 목록 조회용 비동기 요청 함수.\n  const getDeleteBoardList = () => {};\n\n  // 삭제한 게시글 복구 비동기 요청 함수.\n  const restoreBoard = () => {};\n  useEffect(() => {\n    getWithdrawnMemberList();\n  }, []);\n\n  /*\r\n    useEffect : React의 함수형 컴포넌트에서 특정 작업(side Effect)을 처리하기 위해 사용하는 Hook.\r\n  컴포넌트가 렌더링 되거나 상태가 변경될 때 실행되는 작업을 정의할 수 있다.\r\n      useEffect(() => {\r\n    \r\n      // 실행할 작업(side Effect)\r\n      // [] : 의존성 배열.\r\n      두번째 인자로 전달된 배열[]은 의존성 배열(Dependency Array)\r\n      이 useEffect가 언제 실행될 지를 결정함.\r\n      // -> 의존성 배열이 빈 배열일 경우, useEffect는 컴포넌트가 처음 렌더링 될 때 딱 한 번만 실행.\r\n      // Restore 컴포넌트가 처음 렌더링 될 때 getWithdrawnMemberList, getDeleteBoardList 함수를 실행.\r\n    }, []);\r\n  */\n\n  // withdrawnMembers 또는 deleteBoards 상태가 변경 될 때마다 실행.\n  useEffect(() => {\n    if (withdrawnMembers != null /*&& deleteBoards != null*/) {\n      setLoading(false);\n    }\n  }, [withdrawnMembers, deleteBoards]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-box\",\n      children: [/*#__PURE__*/_jsxDEV(RestoreMember, {\n        withdrawnMembers: withdrawnMembers,\n        restoreMember: restoreMember\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RestoreBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(Restore, \"7sZ1jRpyN2wfDoE3W7vWDnW2ydA=\");\n_c = Restore;\nconst RestoreMember = ({\n  withdrawnMembers,\n  restoreMember\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD0C8\\uD1F4 \\uD68C\\uC6D0 \\uBCF5\\uAD6C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD0C8\\uD1F4\\uD55C \\uD68C\\uC6D0 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), withdrawnMembers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD0C8\\uD1F4\\uD55C \\uD68C\\uC6D0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this) : withdrawnMembers.map((member, index) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ul-border\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD68C\\uC6D0 \\uBC88\\uD638 : \", member.memberNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD68C\\uC6D0 \\uC774\\uBA54\\uC77C : \", member.memberEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uD68C\\uC6D0 \\uB2C9\\uB124\\uC784 : \", member.memberNickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restoreBtn\",\n          onClick: () => restoreMember(member),\n          children: \"\\uBCF5\\uAD6C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n_c2 = RestoreMember;\nconst RestoreBoard = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-border\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC0AD\\uC81C \\uAC8C\\uC2DC\\uAE00 \\uBCF5\\uAD6C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC0AD\\uC81C\\uB41C \\uAC8C\\uC2DC\\uAE00 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 7\n  }, this);\n};\n_c3 = RestoreBoard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Restore\");\n$RefreshReg$(_c2, \"RestoreMember\");\n$RefreshReg$(_c3, \"RestoreBoard\");","map":{"version":3,"names":["React","useEffect","useState","axiosApi","jsxDEV","_jsxDEV","Restore","_s","withdrawnMembers","setWithdrawnMembers","deleteBoards","setDeleteBoards","loading","setLoading","getWithdrawnMemberList","resp","get","status","data","error","console","log","restoreMember","member","window","confirm","memberNickname","put","getDeleteBoardList","restoreBoard","children","fileName","_jsxFileName","lineNumber","columnNumber","className","RestoreMember","RestoreBoard","_c","length","map","index","memberNo","memberEmail","onClick","_c2","_c3","$RefreshReg$"],"sources":["C:/workspace/08_Spring_react/react/boardproject-admin-client/src/components/Restore.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { axiosApi } from \"../api/axiosAPI\";\r\n\r\nexport default function Restore() {\r\n  \r\n  const [withdrawnMembers, setWithdrawnMembers] = useState([]); // 탈퇴 회원 목록.\r\n  const [deleteBoards, setDeleteBoards] = useState([]); // 삭제 게시글 목록.\r\n  const [loading, setLoading] = useState(true); // 로딩 상태. (사용자 경험 상향 하기 위해 사용.)\r\n\r\n  // 탈퇴한 회원 목록 조회용 비동기 요청 함수.\r\n  const getWithdrawnMemberList = async () => {\r\n\r\n    try {\r\n\r\n      const resp = await axiosApi.get(\"/admin/withdrawnMemberList\");\r\n\r\n      if(resp.status === 200) {\r\n        setWithdrawnMembers(resp.data);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(\"탈퇴 회원 목록 조회 중 에러 발생 : \", error);\r\n    }\r\n\r\n  }\r\n\r\n  // 탈퇴한 회원 복구 비동기 요청 함수.\r\n  const restoreMember = async (member) => {\r\n    if(!window.confirm(member.memberNickname + \"님을 탈퇴 복구 하겠습니까?\")) {\r\n      \r\n      try {\r\n        const resp = await axiosApi.put(\"/admin/restoreMember\")\r\n      } catch(error) {\r\n        console.log(error);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  // ----------------------------------------\r\n\r\n  // 삭제한 게시글 목록 조회용 비동기 요청 함수.\r\n  const getDeleteBoardList = () => {\r\n\r\n  }\r\n\r\n  // 삭제한 게시글 복구 비동기 요청 함수.\r\n  const restoreBoard = () => {\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWithdrawnMemberList();\r\n  }, []);\r\n\r\n  /*\r\n    useEffect : React의 함수형 컴포넌트에서 특정 작업(side Effect)을 처리하기 위해 사용하는 Hook.\r\n  컴포넌트가 렌더링 되거나 상태가 변경될 때 실행되는 작업을 정의할 수 있다.\r\n\r\n    useEffect(() => {\r\n    \r\n      // 실행할 작업(side Effect)\r\n      // [] : 의존성 배열.\r\n      두번째 인자로 전달된 배열[]은 의존성 배열(Dependency Array)\r\n      이 useEffect가 언제 실행될 지를 결정함.\r\n      // -> 의존성 배열이 빈 배열일 경우, useEffect는 컴포넌트가 처음 렌더링 될 때 딱 한 번만 실행.\r\n      // Restore 컴포넌트가 처음 렌더링 될 때 getWithdrawnMemberList, getDeleteBoardList 함수를 실행.\r\n\r\n  }, []);\r\n  */\r\n\r\n  // withdrawnMembers 또는 deleteBoards 상태가 변경 될 때마다 실행.\r\n  useEffect(() => {\r\n    if(withdrawnMembers != null /*&& deleteBoards != null*/) {\r\n      setLoading(false);\r\n    }\r\n  }, [withdrawnMembers, deleteBoards]);\r\n\r\n  if(loading) {\r\n    \r\n    return <h1>Loading...</h1>\r\n\r\n  } \r\n  else {\r\n    return (\r\n      <div className=\"menu-box\">\r\n        <RestoreMember withdrawnMembers={withdrawnMembers} restoreMember={restoreMember}/>\r\n        <RestoreBoard />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst RestoreMember = ({ withdrawnMembers, restoreMember }) => {\r\n  return (\r\n      <section className=\"section-border\">\r\n      <h2>탈퇴 회원 복구</h2>\r\n\r\n      <h3>탈퇴한 회원 목록</h3>\r\n\r\n      {\r\n        withdrawnMembers.length === 0 ?\r\n        (<p>탈퇴한 회원이 없습니다.</p>) : \r\n        (withdrawnMembers.map((member, index) => {\r\n          return (\r\n            <ul className=\"ul-border\" key={index}>\r\n              <li>회원 번호 : {member.memberNo}</li>\r\n              <li>회원 이메일 : {member.memberEmail}</li>\r\n              <li>회원 닉네임 : {member.memberNickname}</li>\r\n              <button className=\"restoreBtn\" onClick={() => restoreMember(member)}>복구</button>\r\n            </ul>\r\n          )\r\n        }\r\n        ))\r\n        \r\n      }\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nconst RestoreBoard = () => {\r\n  return (\r\n      <section className=\"section-border\">\r\n      <h2>삭제 게시글 복구</h2>\r\n\r\n      <h3>삭제된 게시글 목록</h3>\r\n\r\n    </section>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}